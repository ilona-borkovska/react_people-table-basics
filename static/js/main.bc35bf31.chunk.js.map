{"version":3,"sources":["components/Navigation.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFound.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navigation","className","role","to","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","loading","setLoading","people","setPeople","errorMessage","setErrorMessage","personId","useParams","useEffect","data","preparedPeople","map","person","mother","find","p","name","motherName","father","fatherName","preparePeople","catch","finally","length","slug","sex","born","died","NotFound","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bc35bf31.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  cn('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  }));\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink className={getLinkClass} to=\"/\">\n          Home\n        </NavLink>\n\n        <NavLink className={getLinkClass} to=\"/people\">\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nfunction preparePeople(people: Person[]): Person[] {\n  return people.map(person => {\n    const mother = people.find(p => p.name === person.motherName);\n    const father = people.find(p => p.name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n}\n\nexport const PeoplePage: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const { personId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(data => {\n        const preparedPeople = preparePeople(data);\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <>\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {errorMessage}\n                </p>\n              )}\n\n              {!errorMessage && people.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!errorMessage && people.length > 0 && (\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"table is-striped is-hoverable\n                  is-narrow is-fullwidth\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {people.map(person => (\n                      <tr\n                        data-cy=\"person\"\n                        key={person.slug}\n                        className={cn({\n                          'has-background-warning': personId === person.slug,\n                        })}\n                      >\n                        <td>\n                          <Link\n                            to={`/people/${person.slug}`}\n                            className={cn({\n                              'has-text-danger': person.sex === 'f',\n                            })}\n                          >\n                            {person.name}\n                          </Link>\n                        </td>\n\n                        <td>{person.sex}</td>\n                        <td>{person.born}</td>\n                        <td>{person.died}</td>\n                        <td>\n                          {person.mother ? (\n                            <Link\n                              className=\"has-text-danger\"\n                              to={`/people/${person.mother.slug}`}\n                            >\n                              {person.motherName}\n                            </Link>\n                          ) : (\n                            person.motherName || '-'\n                          )}\n                        </td>\n\n                        <td>\n                          {person.father ? (\n                            <Link\n                              to={`/people/${person.father.slug}`}\n                            >\n                              {person.fatherName}\n                            </Link>\n                          ) : (\n                            person.fatherName || '-'\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFound } from './pages/NotFound';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personId\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}